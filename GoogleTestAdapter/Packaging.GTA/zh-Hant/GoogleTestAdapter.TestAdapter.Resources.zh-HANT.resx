<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RunSettingsMissingNode" xml:space="preserve">
    <value>RunSettingsDocument 不包含 RunSettings 節點! 正在取消設定合併...</value>
  </data>
  <data name="ProcessNotFound" xml:space="preserve">
    <value>找不到處理序</value>
  </data>
  <data name="VSVersion" xml:space="preserve">
    <value>Visual Studio 版本: {0}</value>
  </data>
  <data name="VS2012Error" xml:space="preserve">
    <value>{0} 至少需要 Visual Studio 2012 Update 1 - 請更新您的 Visual Studio 安裝。</value>
  </data>
  <data name="IdentifyVSError" xml:space="preserve">
    <value>無法識別 Visual Studio 版本。{0} 至少需要 Visual Studio 2012 Update 1。</value>
  </data>
  <data name="CouldNotAttachMessage" xml:space="preserve">
    <value>無法將偵錯工具附加至處理序 {0}:{1}{2}</value>
  </data>
  <data name="TraitIgnoreMessage" xml:space="preserve">
    <value>特性名稱與基底測試屬性的名稱相同，因此在測試案例篩選時將會忽略: {0}</value>
  </data>
  <data name="TestCaseFilter" xml:space="preserve">
    <value>測試案例篩選: {0}</value>
  </data>
  <data name="ErrorAndWarning" xml:space="preserve">
    <value>{0} {1} 期間發生了下列錯誤與警告: {2}</value>
  </data>
  <data name="VSVersionMessage" xml:space="preserve">
    <value>找不到 Visual Studio 版本: {0}</value>
  </data>
  <data name="UnknownEnum" xml:space="preserve">
    <value>未知的列舉常值: {0}</value>
  </data>
  <data name="UnknownLiteral" xml:space="preserve">
    <value>未知的列舉常值: {0}</value>
  </data>
  <data name="TestRunningException" xml:space="preserve">
    <value>執行測試時發生例外狀況: {0}</value>
  </data>
  <data name="TestDiscoveryCompleted" xml:space="preserve">
    <value>測試探索已完成，整體持續時間: {0}</value>
  </data>
  <data name="DebuggingMessage" xml:space="preserve">
    <value>只有在 GoogleTestAdapter 已安裝到 Visual Studio 時，才可進行偵錯 - NuGet 安裝不支援此作業 (以及其他功能，像是 Visual Studio 選項、工具列以及解決方案設定)。</value>
  </data>
  <data name="TestExecutionCancelled" xml:space="preserve">
    <value>測試執行已取消。</value>
  </data>
  <data name="UnknownVisualStudioVersion" xml:space="preserve">
    <value>未知的 Visual Studio 版本: {0}</value>
  </data>
  <data name="CantParseSettings" xml:space="preserve">
    <value>解決方案測試設定檔無法剖析，檢查檔案: {0}
例外狀況: {1}</value>
  </data>
  <data name="EnableDebugMode" xml:space="preserve">
    <value> (啟用偵錯模式以取得詳細資訊)</value>
  </data>
  <data name="NoTestCaseFilter" xml:space="preserve">
    <value>未提供任何測試案例篩選</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>解決方案設定: {0}</value>
  </data>
  <data name="TestDiscoveryExceptionError" xml:space="preserve">
    <value>探索測試時發生例外狀況: {0}</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>錯誤: {0}</value>
  </data>
  <data name="TestDiscovery" xml:space="preserve">
    <value>測試探索</value>
  </data>
  <data name="FilterInvalid" xml:space="preserve">
    <value>測試案例篩選無效: {0}</value>
  </data>
  <data name="TestExecutionCompleted" xml:space="preserve">
    <value>Google Test 執行已完成，整體持續時間: {0}</value>
  </data>
  <data name="MoreInformationMessage" xml:space="preserve">
    <value>Visual Studio 的 ActivityLog.xml 中可能有問題的詳細資訊 (請參閱像是 https://blogs.msdn.microsoft.com/visualstudio/2010/02/24/troubleshooting-extensions-with-the-activity-log/)</value>
  </data>
  <data name="DebuggerAttachTime" xml:space="preserve">
    <value>偵錯工具已附加至處理序 {0}，花費 {1} 毫秒</value>
  </data>
  <data name="Matches" xml:space="preserve">
    <value>{0} 可找到 {1}</value>
  </data>
  <data name="DoesntMatch" xml:space="preserve">
    <value>{0} 與 {1} 不相符</value>
  </data>
  <data name="DebuggerAttachMessage" xml:space="preserve">
    <value>無法將偵錯工具附加至處理序 {0}，未提供任何錯誤訊息</value>
  </data>
  <data name="TestExecution" xml:space="preserve">
    <value>測試執行</value>
  </data>
  <data name="Invalid" xml:space="preserve">
    <value>{0} 無效</value>
  </data>
  <data name="WarningMessage" xml:space="preserve">
    <value>警告: {0}</value>
  </data>
  <data name="SolutionFoundButMissingNode" xml:space="preserve">
    <value>解決方案測試設定檔案位於 '{0}'，但不包含 {1} 節點</value>
  </data>
</root>