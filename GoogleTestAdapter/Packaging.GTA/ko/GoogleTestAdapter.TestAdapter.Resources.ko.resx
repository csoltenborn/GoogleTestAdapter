<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RunSettingsMissingNode" xml:space="preserve">
    <value>RunSettingsDocument에 RunSettings 노드가 포함되어 있지 않습니다. 설정 병합을 취소하는 중...</value>
  </data>
  <data name="ProcessNotFound" xml:space="preserve">
    <value>프로세스를 찾을 수 없습니다.</value>
  </data>
  <data name="VSVersion" xml:space="preserve">
    <value>Visual Studio 버전: {0}</value>
  </data>
  <data name="VS2012Error" xml:space="preserve">
    <value>{0}에는 Visual Studio 2012 업데이트 1 이상이 필요합니다. Visual Studio 설치 프로그램을 업데이트하세요.</value>
  </data>
  <data name="IdentifyVSError" xml:space="preserve">
    <value>Visual Studio 버전을 확인할 수 없습니다. {0}에는 Visual Studio 2012 업데이트 1 이상이 필요합니다.</value>
  </data>
  <data name="CouldNotAttachMessage" xml:space="preserve">
    <value>프로세스 {0}에 디버거를 연결할 수 없습니다.{1}{2}</value>
  </data>
  <data name="TraitIgnoreMessage" xml:space="preserve">
    <value>특성에 기본 테스트 속성과 같은 이름이 있으므로 테스트 사례 필터링 {0}에 대해 무시됩니다.</value>
  </data>
  <data name="TestCaseFilter" xml:space="preserve">
    <value>테스트 사례 필터: {0}</value>
  </data>
  <data name="ErrorAndWarning" xml:space="preserve">
    <value>{0} {1} 중 다음 오류 및 경고가 발생했습니다.{2}</value>
  </data>
  <data name="VSVersionMessage" xml:space="preserve">
    <value>Visual Studio 버전을 찾을 수 없습니다. {0}</value>
  </data>
  <data name="UnknownEnum" xml:space="preserve">
    <value>알 수 없는 열거형 리터럴: {0}</value>
  </data>
  <data name="UnknownLiteral" xml:space="preserve">
    <value>알 수 없는 열거형 리터럴: {0}</value>
  </data>
  <data name="TestRunningException" xml:space="preserve">
    <value>테스트를 실행하는 동안 예외가 발생했습니다. {0}</value>
  </data>
  <data name="TestDiscoveryCompleted" xml:space="preserve">
    <value>테스트 검색을 완료했습니다. 전체 기간: {0}</value>
  </data>
  <data name="DebuggingMessage" xml:space="preserve">
    <value>GoogleTestAdapter가 Visual Studio에 설치된 경우에만 디버깅이 가능합니다. NuGet 설치에서 이 기능과 Visual Studio 옵션, 도구 모음, 솔루션 설정 같은 기타 기능을 지원하지 않습니다.</value>
  </data>
  <data name="TestExecutionCancelled" xml:space="preserve">
    <value>테스트 실행이 취소되었습니다.</value>
  </data>
  <data name="UnknownVisualStudioVersion" xml:space="preserve">
    <value>알 수 없는 Visual Studio 버전: {0}</value>
  </data>
  <data name="CantParseSettings" xml:space="preserve">
    <value>솔루션 테스트 설정 파일을 구문 분석할 수 없습니다. 파일 확인: {0}
예외: {1}</value>
  </data>
  <data name="EnableDebugMode" xml:space="preserve">
    <value> (자세한 내용을 보려면 디버그 모드를 사용하도록 설정하세요.)</value>
  </data>
  <data name="NoTestCaseFilter" xml:space="preserve">
    <value>테스트 사례 필터가 제공되지 않았습니다.</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>솔루션 설정: {0}</value>
  </data>
  <data name="TestDiscoveryExceptionError" xml:space="preserve">
    <value>테스트를 검색하는 동안 예외가 발생했습니다. {0}</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>오류: {0}</value>
  </data>
  <data name="TestDiscovery" xml:space="preserve">
    <value>테스트 검색</value>
  </data>
  <data name="FilterInvalid" xml:space="preserve">
    <value>테스트 사례 필터가 잘못되었습니다. {0}</value>
  </data>
  <data name="TestExecutionCompleted" xml:space="preserve">
    <value>Google Test 실행을 완료했습니다. 전체 기간: {0}</value>
  </data>
  <data name="MoreInformationMessage" xml:space="preserve">
    <value>Visual Studio의 ActivityLog.xml의 문제에 대한 자세한 정보가 있을 수 있습니다(예: https://blogs.msdn.microsoft.com/visualstudio/2010/02/24/troubleshooting-extensions-with-the-activity-log/ 참조).</value>
  </data>
  <data name="DebuggerAttachTime" xml:space="preserve">
    <value>{0} 프로세스에 디버거를 연결했습니다. {1}ms가 걸렸습니다.</value>
  </data>
  <data name="Matches" xml:space="preserve">
    <value>{0}이(가) {1}과(와) 일치합니다.</value>
  </data>
  <data name="DoesntMatch" xml:space="preserve">
    <value>{0}이(가) {1}과(와) 일치하지 않습니다.</value>
  </data>
  <data name="DebuggerAttachMessage" xml:space="preserve">
    <value>{0} 프로세스에 디버거를 연결할 수 없습니다. 사용 가능한 오류 메시지가 없습니다.</value>
  </data>
  <data name="TestExecution" xml:space="preserve">
    <value>테스트 실행</value>
  </data>
  <data name="Invalid" xml:space="preserve">
    <value>잘못된 {0}</value>
  </data>
  <data name="WarningMessage" xml:space="preserve">
    <value>경고: {0}</value>
  </data>
  <data name="SolutionFoundButMissingNode" xml:space="preserve">
    <value>솔루션 테스트 설정 파일을 '{0}'에서 찾았지만 {1} 노드가 포함되어 있지 않습니다.</value>
  </data>
</root>